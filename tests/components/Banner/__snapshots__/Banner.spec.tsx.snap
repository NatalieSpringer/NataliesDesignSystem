// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Banner should render correctly in dark 1`] = `
<View
  style={
    {
      "backgroundColor": "#2F3036",
      "borderRadius": 16,
      "padding": 20,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        false,
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Title
  </Text>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 14,
        },
        false,
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 21,
        },
      ]
    }
  >
    Description
  </Text>
  <View
    style={
      {
        "marginTop": 20,
        "width": "50%",
      }
    }
  >
    <View
      accessibilityLabel="Button"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "rgba(0, 122, 255, 1)",
          "borderRadius": 12,
          "justifyContent": "center",
          "minHeight": 40,
          "opacity": 1,
          "textColor": "white",
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "black",
              "fontFamily": "SFProText-Regular",
              "fontSize": 16,
              "fontWeight": "bold",
            },
            {
              "color": "white",
            },
            {
              "textAlign": "left",
            },
            {
              "lineHeight": 24,
            },
          ]
        }
      >
        Button
      </Text>
    </View>
  </View>
</View>
`;

exports[`Banner should render correctly in light 1`] = `
<View
  style={
    {
      "backgroundColor": "#2F3036",
      "borderRadius": 16,
      "padding": 20,
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        false,
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Title
  </Text>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 14,
        },
        false,
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 21,
        },
      ]
    }
  >
    Description
  </Text>
  <View
    style={
      {
        "marginTop": 20,
        "width": "50%",
      }
    }
  >
    <View
      accessibilityLabel="Button"
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "rgba(0, 122, 255, 1)",
          "borderRadius": 12,
          "justifyContent": "center",
          "minHeight": 40,
          "opacity": 1,
          "textColor": "white",
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "black",
              "fontFamily": "SFProText-Regular",
              "fontSize": 16,
              "fontWeight": "bold",
            },
            {
              "color": "white",
            },
            {
              "textAlign": "left",
            },
            {
              "lineHeight": 24,
            },
          ]
        }
      >
        Button
      </Text>
    </View>
  </View>
</View>
`;
