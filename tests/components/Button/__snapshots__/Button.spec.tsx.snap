// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button should render correctly primary in dark when disabled is false 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(10, 132, 255, 1)",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "white",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "white",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "white",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly primary in dark when disabled is true 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(152, 152, 157, 1)",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 0.9,
      "textColor": "white",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "white",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "white",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly primary in dark when disabled is undefined 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(10, 132, 255, 1)",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "white",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "white",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "white",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly primary in light when disabled is false 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(10, 132, 255, 1)",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "white",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "white",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "white",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly primary in light when disabled is true 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(152, 152, 157, 1)",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 0.9,
      "textColor": "white",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "white",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "white",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly primary in light when disabled is undefined 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(10, 132, 255, 1)",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "white",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "white",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "white",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly secondary in dark when disabled is false 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "rgba(10, 132, 255, 1)",
      "borderRadius": 12,
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "rgba(10, 132, 255, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(10, 132, 255, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly secondary in dark when disabled is true 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "rgba(152, 152, 157, 1)",
      "borderRadius": 12,
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 0.9,
      "textColor": "rgba(152, 152, 157, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "white",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(152, 152, 157, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly secondary in dark when disabled is undefined 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "rgba(0, 122, 255, 1)",
      "borderRadius": 12,
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "rgba(0, 122, 255, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(0, 122, 255, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly secondary in light when disabled is false 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "rgba(10, 132, 255, 1)",
      "borderRadius": 12,
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "rgba(10, 132, 255, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(10, 132, 255, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly secondary in light when disabled is true 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "rgba(152, 152, 157, 1)",
      "borderRadius": 12,
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 0.9,
      "textColor": "rgba(152, 152, 157, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "white",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(152, 152, 157, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly secondary in light when disabled is undefined 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "rgba(0, 122, 255, 1)",
      "borderRadius": 12,
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "rgba(0, 122, 255, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(0, 122, 255, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly tertiary in dark when disabled is false 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "rgba(0, 122, 255, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(0, 122, 255, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly tertiary in dark when disabled is true 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 0.9,
      "textColor": "rgba(142, 142, 147, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(142, 142, 147, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly tertiary in dark when disabled is undefined 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "rgba(0, 122, 255, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(0, 122, 255, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly tertiary in light when disabled is false 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "rgba(0, 122, 255, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(0, 122, 255, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly tertiary in light when disabled is true 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 0.9,
      "textColor": "rgba(142, 142, 147, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(142, 142, 147, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;

exports[`Button should render correctly tertiary in light when disabled is undefined 1`] = `
<View
  accessibilityLabel="Hello World"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 12,
      "justifyContent": "center",
      "minHeight": 40,
      "opacity": 1,
      "textColor": "rgba(0, 122, 255, 1)",
    }
  }
>
  <Text
    style={
      [
        {
          "color": "black",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": "bold",
        },
        {
          "color": "rgba(0, 122, 255, 1)",
        },
        {
          "textAlign": "left",
        },
        {
          "lineHeight": 24,
        },
      ]
    }
  >
    Hello World
  </Text>
</View>
`;
